name: CI

on:
  push:
    branches: [ '**' ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ '**' ]
    paths-ignore:
      - 'docs/**'
      - '*.md'



jobs:
  phpunit_phpcs:
    name: "PHPUnit Tests and PHP_CodeSniffer"
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    env:
      php_version: 7.4
      php_extensions: ctype, dom, fileinfo, hash, intl, mbstring, session, simplexml, tokenizer, xml, pdo, mysqli, gd, zip
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: test_db
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP Extension Cache
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php_version }}
          extensions: ${{ env.php_extensions }}
          key: php-ext-cache-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Cache PHP Extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}
          extensions: ${{ env.php_extensions }}
          ini-values: log_errors=On, error_log="${{github.workspace}}/artifacts/php_errors.log"
          coverage: none
          tools: composer:v1

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        env:
            GITHUB_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          composer self-update --ansi || true
          if [[ $GITHUB_ACCESS_TOKEN ]]; then composer config --ansi -g github-oauth.github.com $GITHUB_ACCESS_TOKEN; fi
          composer install --verbose --no-interaction --no-progress --no-suggest --optimize-autoloader --ansi

      - name: Configure Environment
        run: |
          cp tests/utils/actions.env.template .env
          mkdir artifacts

      - name: Perform PHPUnit Tests
        env:
          SS_DATABASE_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: vendor/bin/phpunit --colors=always --printer WebbuildersGroup\\NextGenImages\\Tests\\PHPUnit\\Bootstrap\\GitHubActionsAnnotatorPrinter

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.workflow }}-${{ github.run_id }}-phpunit
          path: ${{ github.workspace }}/artifacts/

      - name: Validate Code Style
        run: vendor/bin/phpcs --colors --report=full --report-checkstyle=artifacts/phpcs.xml

      - name: Annotate Code Style Issues
        if: failure()
        run: (test -f artifacts/phpcs.xml && echo "::add-matcher::.github/matchers/phpcs.json" && cat artifacts/phpcs.xml && echo "::remove-matcher owner=phpcs::")
